.inputArea {
	margin: 1em;
}



/* 
	Add square brackets around the input textboxes, to add a font-based shape to them, 
	and take away the default borders.
	
	The .textInputWrapper is used because before/after psuedo-elements will not display
	on text inputs
*/
.textInputWrapper {
	display: inline-block;
}

.textInputWrapper::before {
	content: "[";
}

.textInputWrapper::after {
	content: "]";
}

.textInputWrapper::before, .textInputWrapper::after {
	font-family: courierPrime;
	font-weight: bold;
	font-size: large;
}

input[type="text"], input[type="text"]:focus {
	border-width: 0;
	outline: none;
	font-family: courierPrime;
}



/* 
	Remove the border around text area, and add a left/right to the text area 
	in type. Unfortunately, the left/right are coupled to the text areas rows value, 
	however this can be decoupled with JS in the future
*/
textarea {
	border-width: 0;
	font-family: courierPrime;
	resize: none;
}

textarea:focus {
	outline: none;
}

.textareaWrapper {
	font-weight: bold;
	display: inline-block;
}

.textareaWrapper:before, .textareaWrapper:after {
	content: "+\A|\A|\A|\A|\A|\A|\A|\A|\A+";
	white-space: pre;
	display: inline-block;
}

.textareaWrapper:after {
	/* Makes the right border look better, as the pipes stay on the outside of any other characters */
	text-align: right;
}



/* 
	Style the checkboxes (and some of the radio button styling to) by hiding them, then using a 
	psuedo-element in it's place for display.
*/
input[type="checkbox"], input[type="radio"] {
	visibility: hidden;
	font-family: courierPrime;
	font-weight: bold;
}

/* 
	The 'x' within the checkbox will be grey when unchecked.
	To make this work (since preceding/proceeding punctuation is 
	included in ::first-letter), the 'x' is the first letter of ::before, 
	and then the display direction is reversed, so it shows last.
*/
input[type="checkbox"]:not(:checked)::first-letter, input[type="radio"]:not(:checked)::first-letter {
	color: #aaa;
}

input[type="checkbox"]:not(:checked):hover::first-letter, input[type="radio"]:not(:checked):hover::first-letter {
	color: #888;
}

input[type="checkbox"]::before {
	content: "x ]";
}

input[type="checkbox"]::after {
	content: "]";
	visibility: visible;
}

input[type="checkbox"]::before, input[type="radio"]::before {
	visibility: visible;
	
	/* Reverse the text */
	direction: rtl;
	unicode-bidi: bidi-override;
	
	/* 
		We need the space character, as any proceeding punctuation (']') would be included in ::first-letter.
		However, we then remove the gap made by that space character, so only the x gets the ::first-letter 
		styling.
	*/
	white-space: pre;
	word-spacing: -0.65em;
}


/* 
	The rest of the radio button styling. See the checkbox styling above, as this works in the same way, 
	and some of that styling is shared with the radio buttons
*/
input[type="radio"]::before {
	content: "o )";
}

input[type="radio"]::after {
	content: ")";
	visibility: visible;
}

.radioButtonSelection label {
	margin-left: 0.5em;
}

.radioButtonSelection h4 {
	margin-bottom: 0.5em;
}