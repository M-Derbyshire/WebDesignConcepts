/* 
	Add square brackets around the input textboxes, to add a font-based shape to them, 
	and take away the default borders.
	
	The .textInputWrapper is used because before/after psuedo-elements will not display
	on text inputs
*/
.textInputWrapper {
	display: inline-block;
	
	&::before, &::after {
		font-family: courierPrime;
		font-weight: bold;
		font-size: large;
		display: inline-block;
	}
	
	&::before {
		content: "[";
	}
	
	&::after {
		content: "]";
	}
}


input[type="text"] {
	border-width: 0;
	outline: none;
	font-family: courierPrime;
}

.inputArea label {
	font-weight: bold;
}


/* 
	Remove the border around text area, and add a left/right to the text area 
	in type. Unfortunately, the left/right are coupled to the text areas rows value, 
	however this can be decoupled with JS in the future
*/
textarea {
	border-width: 0;
	font-family: courierPrime;
	resize: none;
	
	&:focus {
		outline: none;
	}
}

.textareaWrapper {
	font-weight: bold;
	display: inline-block;
	
	&::before, &::after {
		content: "+\A\A\A\A\A\A\A\A\A+";
		white-space: pre;
		display: inline-block;
	}
}



/* 
	Style the checkboxes (and some of the radio button styling to) by hiding them, then using a 
	psuedo-element in it's place for display.
*/
input[type="checkbox"], input[type="radio"] {
	visibility: hidden;
	font-family: courierPrime;
	font-weight: bold;
	cursor: pointer;
	
	
	/* 
	The 'x' within the checkbox will be grey when unchecked.
	To make this work (since preceding/proceeding punctuation is 
	included in ::first-letter), the 'x' is the first letter of ::before, 
	and then the display direction is reversed, so it shows last.
	*/
	&:not(:checked)::first-letter {
		color: #aaa;
	}
	
	&:not(:checked):hover::first-letter {
		color: $interactionHoverColor;
	}
	
	&::before {
		visibility: visible;
		
		/* Reverse the text */
		direction: rtl;
		unicode-bidi: bidi-override;
		
		/* 
			We need the space character, as any proceeding punctuation (']') would be included in ::first-letter.
			However, we then remove the gap made by that space character, so only the x gets the ::first-letter 
			styling.
		*/
		white-space: pre;
		word-spacing: -0.65em;
	}
}

// Seperate stylings for the radio buttons
input[type="radio"] {
	
	margin-right: 1.5em; //Without this, the radio button overlaps the label
	
	&:not(:checked)::before {
		content: "o )";
	}
	
	&:checked::before {
		content: "+ )";
	}
	
	&::after {
		content: ")";
		visibility: visible;
	}
}

// Seperate stylings for the checkboxes
input[type="checkbox"] {
	
	&::before {
		content: "x ]";
	}
	
	&::after {
		content: "]";
		visibility: visible;
	}
}

.radioButtonSelection h4 {
	margin-bottom: 0.5em;
}


/* 
	Styling the submit button
*/
button[type="submit"] {
	font-family: futuraBook;
	font-weight: bolder;
	font-size: 1em;
	border-width: 0;
	outline: none;
	background-color: unset;
	
	&:hover {
		text-decoration: underline;
		cursor: pointer;
	}
	
	&:active {
		font-weight: normal;
	}
	
	&::before {
		content: "[ ";
	}
	
	&::after {
		content: " ]";
	}
}


/* Some smaller screen corrections */
@media (max-width: 650px) {
	
	.checkboxArea, .radioButtonSelection {
		font-size: 1.5em;
	}
	
	input[type="radio"], input[type="checkbox"] {
		font-size: 1em;
		
		/* These are needed to vertically align the box with the label */
		display: inline-block;
		vertical-align: top;
	}
	
	button[type="submit"] {
		font-size: 1.5em;
	}
}


@media (max-width: $extraSmallScreenWidth) {
	
	/* 
		On Galaxy Fold, the md-developer.uk label was 
		on a new line to the radio button, due to the size 
		of the text. Therefore, make it smaller.
	*/
	.radioButtonSelection {
		font-size: 1.25em;
	}
}